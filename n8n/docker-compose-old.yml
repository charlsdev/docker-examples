version: '3.8'

volumes:
   db_storage:
   n8n_storage:
   redis_storage:


x-shared: &shared
   restart: always
   image: docker.n8n.io/n8nio/n8n
   environment:
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=${POSTGRES_DB}
      - DB_POSTGRESDB_USER=${POSTGRES_USER}
      - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_HEALTH_CHECK_ACTIVE=true
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - QUEUE_BULL_REDIS_PASSWORD=${REDIS_PASSWORD}
   links:
      - postgres
      - redis
   volumes:
      - n8n_storage:/home/node/.n8n
   depends_on:
      redis:
         condition: service_healthy
      postgres:
         condition: service_healthy

services:
   postgres:
      image: postgres
      container_name: postgres
      ports:
         - 5432:5432
      restart: always
      environment:
         - POSTGRES_USER
         - POSTGRES_PASSWORD
         - POSTGRES_DB
         - POSTGRES_NON_ROOT_USER
         - POSTGRES_NON_ROOT_PASSWORD
      volumes:
         - db_storage:/var/lib/postgresql/data
         # - ./init-data.sh:/docker-entrypoint-initdb.d/init-data.sh
      healthcheck:
         test:
            [
               'CMD-SHELL',
               'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}'
            ]
         interval: 5s
         timeout: 5s
         retries: 10

   redis:
      image: redis:6-alpine
      container_name: redis
      ports:
         - 6379:6379
      restart: always
      volumes:
         - redis_storage:/data
      command: redis-server --requirepass ${REDIS_PASSWORD}
      healthcheck:
         test:
            [
               'CMD',
               'redis-cli',
               '-a',
               '${REDIS_PASSWORD}',
               'ping'
            ]
         interval: 5s
         timeout: 5s
         retries: 10

   n8n:
      <<: *shared
      container_name: n8n
      ports:
         - 5678:5678

   n8n-worker:
      <<: *shared
      container_name: workers
      command: worker
      depends_on:
         - n8n
